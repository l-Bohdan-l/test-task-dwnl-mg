{"version":3,"sources":["js/loadImg.js","index.js"],"names":["imgInput","document","querySelector","imgPreview","photo","loadImg","files","console","log","localStorage","getItem","i","length","file","type","startsWith","img","createElement","classList","add","appendChild","reader","FileReader","onload","aImg","e","src","target","result","readAsDataURL","onchange"],"mappings":";AACA,MAAMA,EAAWC,SAASC,cAAc,QAClCC,EAAaF,SAASC,cAAc,gBAC1C,IAAIE,EA4CJ,MAAMC,EAAU,SAAUC,GAExBC,QAAQC,IAAIF,GACKG,aAAaC,QAAQ,SAIjC,IAAA,IAAIC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAAK,CACjCE,IAAAA,EAAOP,EAAMK,GAKb,GAJJJ,QAAQC,IAAIK,IAIPA,EAAKC,KAAKC,WAAW,UAAY,SAElCC,IAAAA,EAAMf,SAASgB,cAAc,OACjCD,EAAIE,UAAUC,IAAI,OAClBH,EAAIH,KAAOA,EACXV,EAAWiB,YAAYJ,GAEnBK,IAAAA,EAAS,IAAIC,WACjBD,EAAOE,OAAU,SAAUC,GAClB,OAAA,SAAUC,GAAKD,EAAKE,IAAMD,EAAEE,OAAOC,QAD3B,CAEdZ,GACHK,EAAOQ,cAAchB,KAMzBb,EAAS8B,SAAW,WAClBzB,EAAQ,KAAKC;;AC9Ef,aAAA,QAAA","file":"src.d999b1ea.js","sourceRoot":"../src","sourcesContent":["// const imgPreview = document.querySelector('.img-preview img');\nconst imgInput = document.querySelector('#img');\nconst imgPreview = document.querySelector('.img-preview');\nlet photo;\n\n\n// const loadImg = function(input) {\n//   if (input.files && input.files[0]) {\n//     let reader = new FileReader();\n\n//     reader.onload = function(e) {\n//       imgPreview.src = e.target.result;\n//     }\n//     reader.readAsDataURL(input.files[0]);\n//   }\n//   console.dir(imgInput.files);\n// }\n\n// imgInput.onchange = function() {\n//   loadImg(this);\n// }\n\n// console.dir(imgInput);\n\n// second try/////////////////////////////////////////////////////////////////////////\n\n// function handleFiles(files) {\n//   for (let i = 0; i < files.length; i++) {\n//     let file = files[i];\n\n//     if (!file.type.startsWith('image/')){ continue }\n\n//     let img = document.createElement(\"img\");\n//     img.classList.add(\"obj\");\n//     img.file = file;\n//     imgPreview.appendChild(img); // Предполагается, что \"preview\" это div, в котором будет отображаться содержимое.\n\n//     let reader = new FileReader();\n//     reader.onload = (function(aImg) { return function(e) { aImg.src = e.target.result; }; })(img);\n//     reader.readAsDataURL(file);\n//   }\n// }\n\n// handleFiles(imgInput.files);\n\n//third one /////////////////////////////////////////////////////////////////////////\n\nconst loadImg = function (files) {\n\n  console.log(files)\n  let localPhoto = localStorage.getItem('photo');\n  // let parseLocalPhoto = JSON.parse(localPhoto);\n  // console.log(parseLocalPhoto);\n\n  for (let i = 0; i < files.length; i++) {\n    let file = files[i];\n    console.log(file)\n    // photo.push(file);\n    // console.log(photo)\n\n    if (!file.type.startsWith('image/')){ continue }\n\n    let img = document.createElement(\"img\");\n    img.classList.add(\"obj\");\n    img.file = file;\n    imgPreview.appendChild(img); // Предполагается, что \"preview\" это div, в котором будет отображаться содержимое.\n\n    let reader = new FileReader();\n    reader.onload = (function (aImg) {\n      return function (e) { aImg.src = e.target.result; };\n    })(img);\n    reader.readAsDataURL(file);\n  }\n      // console.log(parseLocalPhoto)\n\n}\n\nimgInput.onchange = function() {\n  loadImg(this.files);\n}\n","import './js/loadImg'\n"]}